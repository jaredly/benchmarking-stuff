Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> text
Rule 1     text -> object
Rule 2     text -> array
Rule 3     value -> object
Rule 4     value -> array
Rule 5     value -> number
Rule 6     value -> string
Rule 7     value -> FALSE
Rule 8     value -> TRUE
Rule 9     value -> NULL
Rule 10    object -> BEGIN_OBJECT members END_OBJECT
Rule 11    members -> <empty>
Rule 12    members -> members member VALUE_SEPARATOR
Rule 13    members -> members member
Rule 14    member -> string NAME_SEPARATOR value
Rule 15    values -> <empty>
Rule 16    values -> values value VALUE_SEPARATOR
Rule 17    values -> values value
Rule 18    array -> BEGIN_ARRAY values END_ARRAY
Rule 19    number -> integer
Rule 20    number -> float
Rule 21    number -> MINUS integer
Rule 22    number -> MINUS float
Rule 23    integer -> int
Rule 24    integer -> int exp
Rule 25    float -> int frac
Rule 26    float -> int frac exp
Rule 27    exp -> E MINUS DIGITS
Rule 28    exp -> E DIGITS
Rule 29    exp -> E PLUS DIGITS
Rule 30    frac -> DECIMAL_POINT DIGITS
Rule 31    int -> ZERO
Rule 32    int -> DIGITS
Rule 33    string -> QUOTATION_MARK chars QUOTATION_MARK
Rule 34    chars -> <empty>
Rule 35    chars -> chars char
Rule 36    char -> UNESCAPED
Rule 37    char -> ESCAPE QUOTATION_MARK
Rule 38    char -> ESCAPE REVERSE_SOLIDUS
Rule 39    char -> ESCAPE SOLIDUS
Rule 40    char -> ESCAPE BACKSPACE_CHAR
Rule 41    char -> ESCAPE FORM_FEED_CHAR
Rule 42    char -> ESCAPE LINE_FEED_CHAR
Rule 43    char -> ESCAPE CARRIAGE_RETURN_CHAR
Rule 44    char -> ESCAPE TAB_CHAR
Rule 45    char -> ESCAPE UNICODE_HEX

Terminals, with rules where they appear

BACKSPACE_CHAR       : 40
BEGIN_ARRAY          : 18
BEGIN_OBJECT         : 10
CARRIAGE_RETURN_CHAR : 43
DECIMAL_POINT        : 30
DIGITS               : 27 28 29 30 32
E                    : 27 28 29
END_ARRAY            : 18
END_OBJECT           : 10
ESCAPE               : 37 38 39 40 41 42 43 44 45
FALSE                : 7
FORM_FEED_CHAR       : 41
LINE_FEED_CHAR       : 42
MINUS                : 21 22 27
NAME_SEPARATOR       : 14
NULL                 : 9
PLUS                 : 29
QUOTATION_MARK       : 33 33 37
REVERSE_SOLIDUS      : 38
SOLIDUS              : 39
TAB_CHAR             : 44
TRUE                 : 8
UNESCAPED            : 36
UNICODE_HEX          : 45
VALUE_SEPARATOR      : 12 16
ZERO                 : 31
error                : 

Nonterminals, with rules where they appear

array                : 2 4
char                 : 35
chars                : 33 35
exp                  : 24 26
float                : 20 22
frac                 : 25 26
int                  : 23 24 25 26
integer              : 19 21
member               : 12 13
members              : 10 12 13
number               : 5
object               : 1 3
string               : 6 14
text                 : 0
value                : 14 16 17
values               : 16 17 18

Parsing method: LALR

state 0

    (0) S' -> . text
    (1) text -> . object
    (2) text -> . array
    (10) object -> . BEGIN_OBJECT members END_OBJECT
    (18) array -> . BEGIN_ARRAY values END_ARRAY

    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2

    text                           shift and go to state 3
    array                          shift and go to state 5
    object                         shift and go to state 4

state 1

    (10) object -> BEGIN_OBJECT . members END_OBJECT
    (11) members -> .
    (12) members -> . members member VALUE_SEPARATOR
    (13) members -> . members member

    END_OBJECT      reduce using rule 11 (members -> .)
    QUOTATION_MARK  reduce using rule 11 (members -> .)

    members                        shift and go to state 6

state 2

    (18) array -> BEGIN_ARRAY . values END_ARRAY
    (15) values -> .
    (16) values -> . values value VALUE_SEPARATOR
    (17) values -> . values value

    END_ARRAY       reduce using rule 15 (values -> .)
    FALSE           reduce using rule 15 (values -> .)
    TRUE            reduce using rule 15 (values -> .)
    NULL            reduce using rule 15 (values -> .)
    BEGIN_OBJECT    reduce using rule 15 (values -> .)
    BEGIN_ARRAY     reduce using rule 15 (values -> .)
    MINUS           reduce using rule 15 (values -> .)
    QUOTATION_MARK  reduce using rule 15 (values -> .)
    ZERO            reduce using rule 15 (values -> .)
    DIGITS          reduce using rule 15 (values -> .)

    values                         shift and go to state 7

state 3

    (0) S' -> text .



state 4

    (1) text -> object .

    $end            reduce using rule 1 (text -> object .)


state 5

    (2) text -> array .

    $end            reduce using rule 2 (text -> array .)


state 6

    (10) object -> BEGIN_OBJECT members . END_OBJECT
    (12) members -> members . member VALUE_SEPARATOR
    (13) members -> members . member
    (14) member -> . string NAME_SEPARATOR value
    (33) string -> . QUOTATION_MARK chars QUOTATION_MARK

    END_OBJECT      shift and go to state 8
    QUOTATION_MARK  shift and go to state 10

    member                         shift and go to state 9
    string                         shift and go to state 11

state 7

    (18) array -> BEGIN_ARRAY values . END_ARRAY
    (16) values -> values . value VALUE_SEPARATOR
    (17) values -> values . value
    (3) value -> . object
    (4) value -> . array
    (5) value -> . number
    (6) value -> . string
    (7) value -> . FALSE
    (8) value -> . TRUE
    (9) value -> . NULL
    (10) object -> . BEGIN_OBJECT members END_OBJECT
    (18) array -> . BEGIN_ARRAY values END_ARRAY
    (19) number -> . integer
    (20) number -> . float
    (21) number -> . MINUS integer
    (22) number -> . MINUS float
    (33) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (23) integer -> . int
    (24) integer -> . int exp
    (25) float -> . int frac
    (26) float -> . int frac exp
    (31) int -> . ZERO
    (32) int -> . DIGITS

    END_ARRAY       shift and go to state 20
    FALSE           shift and go to state 25
    TRUE            shift and go to state 17
    NULL            shift and go to state 16
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    MINUS           shift and go to state 18
    QUOTATION_MARK  shift and go to state 10
    ZERO            shift and go to state 23
    DIGITS          shift and go to state 19

    float                          shift and go to state 13
    string                         shift and go to state 21
    int                            shift and go to state 12
    object                         shift and go to state 22
    number                         shift and go to state 14
    value                          shift and go to state 26
    integer                        shift and go to state 24
    array                          shift and go to state 15

state 8

    (10) object -> BEGIN_OBJECT members END_OBJECT .

    VALUE_SEPARATOR reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    END_OBJECT      reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    QUOTATION_MARK  reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    END_ARRAY       reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    FALSE           reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    TRUE            reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    NULL            reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    BEGIN_OBJECT    reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    BEGIN_ARRAY     reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    MINUS           reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    ZERO            reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    DIGITS          reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)
    $end            reduce using rule 10 (object -> BEGIN_OBJECT members END_OBJECT .)


state 9

    (12) members -> members member . VALUE_SEPARATOR
    (13) members -> members member .

    VALUE_SEPARATOR shift and go to state 27
    END_OBJECT      reduce using rule 13 (members -> members member .)
    QUOTATION_MARK  reduce using rule 13 (members -> members member .)


state 10

    (33) string -> QUOTATION_MARK . chars QUOTATION_MARK
    (34) chars -> .
    (35) chars -> . chars char

    QUOTATION_MARK  reduce using rule 34 (chars -> .)
    UNESCAPED       reduce using rule 34 (chars -> .)
    ESCAPE          reduce using rule 34 (chars -> .)

    chars                          shift and go to state 28

state 11

    (14) member -> string . NAME_SEPARATOR value

    NAME_SEPARATOR  shift and go to state 29


state 12

    (23) integer -> int .
    (24) integer -> int . exp
    (25) float -> int . frac
    (26) float -> int . frac exp
    (27) exp -> . E MINUS DIGITS
    (28) exp -> . E DIGITS
    (29) exp -> . E PLUS DIGITS
    (30) frac -> . DECIMAL_POINT DIGITS

    VALUE_SEPARATOR reduce using rule 23 (integer -> int .)
    END_OBJECT      reduce using rule 23 (integer -> int .)
    QUOTATION_MARK  reduce using rule 23 (integer -> int .)
    END_ARRAY       reduce using rule 23 (integer -> int .)
    FALSE           reduce using rule 23 (integer -> int .)
    TRUE            reduce using rule 23 (integer -> int .)
    NULL            reduce using rule 23 (integer -> int .)
    BEGIN_OBJECT    reduce using rule 23 (integer -> int .)
    BEGIN_ARRAY     reduce using rule 23 (integer -> int .)
    MINUS           reduce using rule 23 (integer -> int .)
    ZERO            reduce using rule 23 (integer -> int .)
    DIGITS          reduce using rule 23 (integer -> int .)
    E               shift and go to state 30
    DECIMAL_POINT   shift and go to state 32

    frac                           shift and go to state 33
    exp                            shift and go to state 31

state 13

    (20) number -> float .

    VALUE_SEPARATOR reduce using rule 20 (number -> float .)
    END_OBJECT      reduce using rule 20 (number -> float .)
    QUOTATION_MARK  reduce using rule 20 (number -> float .)
    END_ARRAY       reduce using rule 20 (number -> float .)
    FALSE           reduce using rule 20 (number -> float .)
    TRUE            reduce using rule 20 (number -> float .)
    NULL            reduce using rule 20 (number -> float .)
    BEGIN_OBJECT    reduce using rule 20 (number -> float .)
    BEGIN_ARRAY     reduce using rule 20 (number -> float .)
    MINUS           reduce using rule 20 (number -> float .)
    ZERO            reduce using rule 20 (number -> float .)
    DIGITS          reduce using rule 20 (number -> float .)


state 14

    (5) value -> number .

    VALUE_SEPARATOR reduce using rule 5 (value -> number .)
    END_OBJECT      reduce using rule 5 (value -> number .)
    QUOTATION_MARK  reduce using rule 5 (value -> number .)
    END_ARRAY       reduce using rule 5 (value -> number .)
    FALSE           reduce using rule 5 (value -> number .)
    TRUE            reduce using rule 5 (value -> number .)
    NULL            reduce using rule 5 (value -> number .)
    BEGIN_OBJECT    reduce using rule 5 (value -> number .)
    BEGIN_ARRAY     reduce using rule 5 (value -> number .)
    MINUS           reduce using rule 5 (value -> number .)
    ZERO            reduce using rule 5 (value -> number .)
    DIGITS          reduce using rule 5 (value -> number .)


state 15

    (4) value -> array .

    VALUE_SEPARATOR reduce using rule 4 (value -> array .)
    END_OBJECT      reduce using rule 4 (value -> array .)
    QUOTATION_MARK  reduce using rule 4 (value -> array .)
    END_ARRAY       reduce using rule 4 (value -> array .)
    FALSE           reduce using rule 4 (value -> array .)
    TRUE            reduce using rule 4 (value -> array .)
    NULL            reduce using rule 4 (value -> array .)
    BEGIN_OBJECT    reduce using rule 4 (value -> array .)
    BEGIN_ARRAY     reduce using rule 4 (value -> array .)
    MINUS           reduce using rule 4 (value -> array .)
    ZERO            reduce using rule 4 (value -> array .)
    DIGITS          reduce using rule 4 (value -> array .)


state 16

    (9) value -> NULL .

    VALUE_SEPARATOR reduce using rule 9 (value -> NULL .)
    END_OBJECT      reduce using rule 9 (value -> NULL .)
    QUOTATION_MARK  reduce using rule 9 (value -> NULL .)
    END_ARRAY       reduce using rule 9 (value -> NULL .)
    FALSE           reduce using rule 9 (value -> NULL .)
    TRUE            reduce using rule 9 (value -> NULL .)
    NULL            reduce using rule 9 (value -> NULL .)
    BEGIN_OBJECT    reduce using rule 9 (value -> NULL .)
    BEGIN_ARRAY     reduce using rule 9 (value -> NULL .)
    MINUS           reduce using rule 9 (value -> NULL .)
    ZERO            reduce using rule 9 (value -> NULL .)
    DIGITS          reduce using rule 9 (value -> NULL .)


state 17

    (8) value -> TRUE .

    VALUE_SEPARATOR reduce using rule 8 (value -> TRUE .)
    END_OBJECT      reduce using rule 8 (value -> TRUE .)
    QUOTATION_MARK  reduce using rule 8 (value -> TRUE .)
    END_ARRAY       reduce using rule 8 (value -> TRUE .)
    FALSE           reduce using rule 8 (value -> TRUE .)
    TRUE            reduce using rule 8 (value -> TRUE .)
    NULL            reduce using rule 8 (value -> TRUE .)
    BEGIN_OBJECT    reduce using rule 8 (value -> TRUE .)
    BEGIN_ARRAY     reduce using rule 8 (value -> TRUE .)
    MINUS           reduce using rule 8 (value -> TRUE .)
    ZERO            reduce using rule 8 (value -> TRUE .)
    DIGITS          reduce using rule 8 (value -> TRUE .)


state 18

    (21) number -> MINUS . integer
    (22) number -> MINUS . float
    (23) integer -> . int
    (24) integer -> . int exp
    (25) float -> . int frac
    (26) float -> . int frac exp
    (31) int -> . ZERO
    (32) int -> . DIGITS

    ZERO            shift and go to state 23
    DIGITS          shift and go to state 19

    int                            shift and go to state 12
    integer                        shift and go to state 35
    float                          shift and go to state 34

state 19

    (32) int -> DIGITS .

    E               reduce using rule 32 (int -> DIGITS .)
    DECIMAL_POINT   reduce using rule 32 (int -> DIGITS .)
    VALUE_SEPARATOR reduce using rule 32 (int -> DIGITS .)
    END_ARRAY       reduce using rule 32 (int -> DIGITS .)
    FALSE           reduce using rule 32 (int -> DIGITS .)
    TRUE            reduce using rule 32 (int -> DIGITS .)
    NULL            reduce using rule 32 (int -> DIGITS .)
    BEGIN_OBJECT    reduce using rule 32 (int -> DIGITS .)
    BEGIN_ARRAY     reduce using rule 32 (int -> DIGITS .)
    MINUS           reduce using rule 32 (int -> DIGITS .)
    QUOTATION_MARK  reduce using rule 32 (int -> DIGITS .)
    ZERO            reduce using rule 32 (int -> DIGITS .)
    DIGITS          reduce using rule 32 (int -> DIGITS .)
    END_OBJECT      reduce using rule 32 (int -> DIGITS .)


state 20

    (18) array -> BEGIN_ARRAY values END_ARRAY .

    VALUE_SEPARATOR reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    END_OBJECT      reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    QUOTATION_MARK  reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    $end            reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    END_ARRAY       reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    FALSE           reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    TRUE            reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    NULL            reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    BEGIN_OBJECT    reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    BEGIN_ARRAY     reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    MINUS           reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    ZERO            reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)
    DIGITS          reduce using rule 18 (array -> BEGIN_ARRAY values END_ARRAY .)


state 21

    (6) value -> string .

    VALUE_SEPARATOR reduce using rule 6 (value -> string .)
    END_OBJECT      reduce using rule 6 (value -> string .)
    QUOTATION_MARK  reduce using rule 6 (value -> string .)
    END_ARRAY       reduce using rule 6 (value -> string .)
    FALSE           reduce using rule 6 (value -> string .)
    TRUE            reduce using rule 6 (value -> string .)
    NULL            reduce using rule 6 (value -> string .)
    BEGIN_OBJECT    reduce using rule 6 (value -> string .)
    BEGIN_ARRAY     reduce using rule 6 (value -> string .)
    MINUS           reduce using rule 6 (value -> string .)
    ZERO            reduce using rule 6 (value -> string .)
    DIGITS          reduce using rule 6 (value -> string .)


state 22

    (3) value -> object .

    VALUE_SEPARATOR reduce using rule 3 (value -> object .)
    END_OBJECT      reduce using rule 3 (value -> object .)
    QUOTATION_MARK  reduce using rule 3 (value -> object .)
    END_ARRAY       reduce using rule 3 (value -> object .)
    FALSE           reduce using rule 3 (value -> object .)
    TRUE            reduce using rule 3 (value -> object .)
    NULL            reduce using rule 3 (value -> object .)
    BEGIN_OBJECT    reduce using rule 3 (value -> object .)
    BEGIN_ARRAY     reduce using rule 3 (value -> object .)
    MINUS           reduce using rule 3 (value -> object .)
    ZERO            reduce using rule 3 (value -> object .)
    DIGITS          reduce using rule 3 (value -> object .)


state 23

    (31) int -> ZERO .

    E               reduce using rule 31 (int -> ZERO .)
    DECIMAL_POINT   reduce using rule 31 (int -> ZERO .)
    VALUE_SEPARATOR reduce using rule 31 (int -> ZERO .)
    END_ARRAY       reduce using rule 31 (int -> ZERO .)
    FALSE           reduce using rule 31 (int -> ZERO .)
    TRUE            reduce using rule 31 (int -> ZERO .)
    NULL            reduce using rule 31 (int -> ZERO .)
    BEGIN_OBJECT    reduce using rule 31 (int -> ZERO .)
    BEGIN_ARRAY     reduce using rule 31 (int -> ZERO .)
    MINUS           reduce using rule 31 (int -> ZERO .)
    QUOTATION_MARK  reduce using rule 31 (int -> ZERO .)
    ZERO            reduce using rule 31 (int -> ZERO .)
    DIGITS          reduce using rule 31 (int -> ZERO .)
    END_OBJECT      reduce using rule 31 (int -> ZERO .)


state 24

    (19) number -> integer .

    VALUE_SEPARATOR reduce using rule 19 (number -> integer .)
    END_OBJECT      reduce using rule 19 (number -> integer .)
    QUOTATION_MARK  reduce using rule 19 (number -> integer .)
    END_ARRAY       reduce using rule 19 (number -> integer .)
    FALSE           reduce using rule 19 (number -> integer .)
    TRUE            reduce using rule 19 (number -> integer .)
    NULL            reduce using rule 19 (number -> integer .)
    BEGIN_OBJECT    reduce using rule 19 (number -> integer .)
    BEGIN_ARRAY     reduce using rule 19 (number -> integer .)
    MINUS           reduce using rule 19 (number -> integer .)
    ZERO            reduce using rule 19 (number -> integer .)
    DIGITS          reduce using rule 19 (number -> integer .)


state 25

    (7) value -> FALSE .

    VALUE_SEPARATOR reduce using rule 7 (value -> FALSE .)
    END_OBJECT      reduce using rule 7 (value -> FALSE .)
    QUOTATION_MARK  reduce using rule 7 (value -> FALSE .)
    END_ARRAY       reduce using rule 7 (value -> FALSE .)
    FALSE           reduce using rule 7 (value -> FALSE .)
    TRUE            reduce using rule 7 (value -> FALSE .)
    NULL            reduce using rule 7 (value -> FALSE .)
    BEGIN_OBJECT    reduce using rule 7 (value -> FALSE .)
    BEGIN_ARRAY     reduce using rule 7 (value -> FALSE .)
    MINUS           reduce using rule 7 (value -> FALSE .)
    ZERO            reduce using rule 7 (value -> FALSE .)
    DIGITS          reduce using rule 7 (value -> FALSE .)


state 26

    (16) values -> values value . VALUE_SEPARATOR
    (17) values -> values value .

    VALUE_SEPARATOR shift and go to state 36
    END_ARRAY       reduce using rule 17 (values -> values value .)
    FALSE           reduce using rule 17 (values -> values value .)
    TRUE            reduce using rule 17 (values -> values value .)
    NULL            reduce using rule 17 (values -> values value .)
    BEGIN_OBJECT    reduce using rule 17 (values -> values value .)
    BEGIN_ARRAY     reduce using rule 17 (values -> values value .)
    MINUS           reduce using rule 17 (values -> values value .)
    QUOTATION_MARK  reduce using rule 17 (values -> values value .)
    ZERO            reduce using rule 17 (values -> values value .)
    DIGITS          reduce using rule 17 (values -> values value .)


state 27

    (12) members -> members member VALUE_SEPARATOR .

    END_OBJECT      reduce using rule 12 (members -> members member VALUE_SEPARATOR .)
    QUOTATION_MARK  reduce using rule 12 (members -> members member VALUE_SEPARATOR .)


state 28

    (33) string -> QUOTATION_MARK chars . QUOTATION_MARK
    (35) chars -> chars . char
    (36) char -> . UNESCAPED
    (37) char -> . ESCAPE QUOTATION_MARK
    (38) char -> . ESCAPE REVERSE_SOLIDUS
    (39) char -> . ESCAPE SOLIDUS
    (40) char -> . ESCAPE BACKSPACE_CHAR
    (41) char -> . ESCAPE FORM_FEED_CHAR
    (42) char -> . ESCAPE LINE_FEED_CHAR
    (43) char -> . ESCAPE CARRIAGE_RETURN_CHAR
    (44) char -> . ESCAPE TAB_CHAR
    (45) char -> . ESCAPE UNICODE_HEX

    QUOTATION_MARK  shift and go to state 40
    UNESCAPED       shift and go to state 37
    ESCAPE          shift and go to state 39

    char                           shift and go to state 38

state 29

    (14) member -> string NAME_SEPARATOR . value
    (3) value -> . object
    (4) value -> . array
    (5) value -> . number
    (6) value -> . string
    (7) value -> . FALSE
    (8) value -> . TRUE
    (9) value -> . NULL
    (10) object -> . BEGIN_OBJECT members END_OBJECT
    (18) array -> . BEGIN_ARRAY values END_ARRAY
    (19) number -> . integer
    (20) number -> . float
    (21) number -> . MINUS integer
    (22) number -> . MINUS float
    (33) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (23) integer -> . int
    (24) integer -> . int exp
    (25) float -> . int frac
    (26) float -> . int frac exp
    (31) int -> . ZERO
    (32) int -> . DIGITS

    FALSE           shift and go to state 25
    TRUE            shift and go to state 17
    NULL            shift and go to state 16
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    MINUS           shift and go to state 18
    QUOTATION_MARK  shift and go to state 10
    ZERO            shift and go to state 23
    DIGITS          shift and go to state 19

    float                          shift and go to state 13
    string                         shift and go to state 21
    int                            shift and go to state 12
    object                         shift and go to state 22
    number                         shift and go to state 14
    value                          shift and go to state 41
    integer                        shift and go to state 24
    array                          shift and go to state 15

state 30

    (27) exp -> E . MINUS DIGITS
    (28) exp -> E . DIGITS
    (29) exp -> E . PLUS DIGITS

    MINUS           shift and go to state 44
    DIGITS          shift and go to state 42
    PLUS            shift and go to state 43


state 31

    (24) integer -> int exp .

    VALUE_SEPARATOR reduce using rule 24 (integer -> int exp .)
    END_OBJECT      reduce using rule 24 (integer -> int exp .)
    QUOTATION_MARK  reduce using rule 24 (integer -> int exp .)
    END_ARRAY       reduce using rule 24 (integer -> int exp .)
    FALSE           reduce using rule 24 (integer -> int exp .)
    TRUE            reduce using rule 24 (integer -> int exp .)
    NULL            reduce using rule 24 (integer -> int exp .)
    BEGIN_OBJECT    reduce using rule 24 (integer -> int exp .)
    BEGIN_ARRAY     reduce using rule 24 (integer -> int exp .)
    MINUS           reduce using rule 24 (integer -> int exp .)
    ZERO            reduce using rule 24 (integer -> int exp .)
    DIGITS          reduce using rule 24 (integer -> int exp .)


state 32

    (30) frac -> DECIMAL_POINT . DIGITS

    DIGITS          shift and go to state 45


state 33

    (25) float -> int frac .
    (26) float -> int frac . exp
    (27) exp -> . E MINUS DIGITS
    (28) exp -> . E DIGITS
    (29) exp -> . E PLUS DIGITS

    VALUE_SEPARATOR reduce using rule 25 (float -> int frac .)
    END_ARRAY       reduce using rule 25 (float -> int frac .)
    FALSE           reduce using rule 25 (float -> int frac .)
    TRUE            reduce using rule 25 (float -> int frac .)
    NULL            reduce using rule 25 (float -> int frac .)
    BEGIN_OBJECT    reduce using rule 25 (float -> int frac .)
    BEGIN_ARRAY     reduce using rule 25 (float -> int frac .)
    MINUS           reduce using rule 25 (float -> int frac .)
    QUOTATION_MARK  reduce using rule 25 (float -> int frac .)
    ZERO            reduce using rule 25 (float -> int frac .)
    DIGITS          reduce using rule 25 (float -> int frac .)
    END_OBJECT      reduce using rule 25 (float -> int frac .)
    E               shift and go to state 30

    exp                            shift and go to state 46

state 34

    (22) number -> MINUS float .

    VALUE_SEPARATOR reduce using rule 22 (number -> MINUS float .)
    END_OBJECT      reduce using rule 22 (number -> MINUS float .)
    QUOTATION_MARK  reduce using rule 22 (number -> MINUS float .)
    END_ARRAY       reduce using rule 22 (number -> MINUS float .)
    FALSE           reduce using rule 22 (number -> MINUS float .)
    TRUE            reduce using rule 22 (number -> MINUS float .)
    NULL            reduce using rule 22 (number -> MINUS float .)
    BEGIN_OBJECT    reduce using rule 22 (number -> MINUS float .)
    BEGIN_ARRAY     reduce using rule 22 (number -> MINUS float .)
    MINUS           reduce using rule 22 (number -> MINUS float .)
    ZERO            reduce using rule 22 (number -> MINUS float .)
    DIGITS          reduce using rule 22 (number -> MINUS float .)


state 35

    (21) number -> MINUS integer .

    VALUE_SEPARATOR reduce using rule 21 (number -> MINUS integer .)
    END_OBJECT      reduce using rule 21 (number -> MINUS integer .)
    QUOTATION_MARK  reduce using rule 21 (number -> MINUS integer .)
    END_ARRAY       reduce using rule 21 (number -> MINUS integer .)
    FALSE           reduce using rule 21 (number -> MINUS integer .)
    TRUE            reduce using rule 21 (number -> MINUS integer .)
    NULL            reduce using rule 21 (number -> MINUS integer .)
    BEGIN_OBJECT    reduce using rule 21 (number -> MINUS integer .)
    BEGIN_ARRAY     reduce using rule 21 (number -> MINUS integer .)
    MINUS           reduce using rule 21 (number -> MINUS integer .)
    ZERO            reduce using rule 21 (number -> MINUS integer .)
    DIGITS          reduce using rule 21 (number -> MINUS integer .)


state 36

    (16) values -> values value VALUE_SEPARATOR .

    END_ARRAY       reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    FALSE           reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    TRUE            reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    NULL            reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    BEGIN_OBJECT    reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    BEGIN_ARRAY     reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    MINUS           reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    QUOTATION_MARK  reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    ZERO            reduce using rule 16 (values -> values value VALUE_SEPARATOR .)
    DIGITS          reduce using rule 16 (values -> values value VALUE_SEPARATOR .)


state 37

    (36) char -> UNESCAPED .

    QUOTATION_MARK  reduce using rule 36 (char -> UNESCAPED .)
    UNESCAPED       reduce using rule 36 (char -> UNESCAPED .)
    ESCAPE          reduce using rule 36 (char -> UNESCAPED .)


state 38

    (35) chars -> chars char .

    QUOTATION_MARK  reduce using rule 35 (chars -> chars char .)
    UNESCAPED       reduce using rule 35 (chars -> chars char .)
    ESCAPE          reduce using rule 35 (chars -> chars char .)


state 39

    (37) char -> ESCAPE . QUOTATION_MARK
    (38) char -> ESCAPE . REVERSE_SOLIDUS
    (39) char -> ESCAPE . SOLIDUS
    (40) char -> ESCAPE . BACKSPACE_CHAR
    (41) char -> ESCAPE . FORM_FEED_CHAR
    (42) char -> ESCAPE . LINE_FEED_CHAR
    (43) char -> ESCAPE . CARRIAGE_RETURN_CHAR
    (44) char -> ESCAPE . TAB_CHAR
    (45) char -> ESCAPE . UNICODE_HEX

    QUOTATION_MARK  shift and go to state 54
    REVERSE_SOLIDUS shift and go to state 48
    SOLIDUS         shift and go to state 47
    BACKSPACE_CHAR  shift and go to state 50
    FORM_FEED_CHAR  shift and go to state 53
    LINE_FEED_CHAR  shift and go to state 49
    CARRIAGE_RETURN_CHAR shift and go to state 51
    TAB_CHAR        shift and go to state 55
    UNICODE_HEX     shift and go to state 52


state 40

    (33) string -> QUOTATION_MARK chars QUOTATION_MARK .

    VALUE_SEPARATOR reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    END_ARRAY       reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    FALSE           reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    TRUE            reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    NULL            reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    BEGIN_OBJECT    reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    BEGIN_ARRAY     reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    MINUS           reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    QUOTATION_MARK  reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    ZERO            reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    DIGITS          reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    NAME_SEPARATOR  reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    END_OBJECT      reduce using rule 33 (string -> QUOTATION_MARK chars QUOTATION_MARK .)


state 41

    (14) member -> string NAME_SEPARATOR value .

    VALUE_SEPARATOR reduce using rule 14 (member -> string NAME_SEPARATOR value .)
    END_OBJECT      reduce using rule 14 (member -> string NAME_SEPARATOR value .)
    QUOTATION_MARK  reduce using rule 14 (member -> string NAME_SEPARATOR value .)


state 42

    (28) exp -> E DIGITS .

    VALUE_SEPARATOR reduce using rule 28 (exp -> E DIGITS .)
    END_ARRAY       reduce using rule 28 (exp -> E DIGITS .)
    FALSE           reduce using rule 28 (exp -> E DIGITS .)
    TRUE            reduce using rule 28 (exp -> E DIGITS .)
    NULL            reduce using rule 28 (exp -> E DIGITS .)
    BEGIN_OBJECT    reduce using rule 28 (exp -> E DIGITS .)
    BEGIN_ARRAY     reduce using rule 28 (exp -> E DIGITS .)
    MINUS           reduce using rule 28 (exp -> E DIGITS .)
    QUOTATION_MARK  reduce using rule 28 (exp -> E DIGITS .)
    ZERO            reduce using rule 28 (exp -> E DIGITS .)
    DIGITS          reduce using rule 28 (exp -> E DIGITS .)
    END_OBJECT      reduce using rule 28 (exp -> E DIGITS .)


state 43

    (29) exp -> E PLUS . DIGITS

    DIGITS          shift and go to state 56


state 44

    (27) exp -> E MINUS . DIGITS

    DIGITS          shift and go to state 57


state 45

    (30) frac -> DECIMAL_POINT DIGITS .

    E               reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    VALUE_SEPARATOR reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    END_ARRAY       reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    FALSE           reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    TRUE            reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    NULL            reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    BEGIN_OBJECT    reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    BEGIN_ARRAY     reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    MINUS           reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    QUOTATION_MARK  reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    ZERO            reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    DIGITS          reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)
    END_OBJECT      reduce using rule 30 (frac -> DECIMAL_POINT DIGITS .)


state 46

    (26) float -> int frac exp .

    VALUE_SEPARATOR reduce using rule 26 (float -> int frac exp .)
    END_ARRAY       reduce using rule 26 (float -> int frac exp .)
    FALSE           reduce using rule 26 (float -> int frac exp .)
    TRUE            reduce using rule 26 (float -> int frac exp .)
    NULL            reduce using rule 26 (float -> int frac exp .)
    BEGIN_OBJECT    reduce using rule 26 (float -> int frac exp .)
    BEGIN_ARRAY     reduce using rule 26 (float -> int frac exp .)
    MINUS           reduce using rule 26 (float -> int frac exp .)
    QUOTATION_MARK  reduce using rule 26 (float -> int frac exp .)
    ZERO            reduce using rule 26 (float -> int frac exp .)
    DIGITS          reduce using rule 26 (float -> int frac exp .)
    END_OBJECT      reduce using rule 26 (float -> int frac exp .)


state 47

    (39) char -> ESCAPE SOLIDUS .

    QUOTATION_MARK  reduce using rule 39 (char -> ESCAPE SOLIDUS .)
    UNESCAPED       reduce using rule 39 (char -> ESCAPE SOLIDUS .)
    ESCAPE          reduce using rule 39 (char -> ESCAPE SOLIDUS .)


state 48

    (38) char -> ESCAPE REVERSE_SOLIDUS .

    QUOTATION_MARK  reduce using rule 38 (char -> ESCAPE REVERSE_SOLIDUS .)
    UNESCAPED       reduce using rule 38 (char -> ESCAPE REVERSE_SOLIDUS .)
    ESCAPE          reduce using rule 38 (char -> ESCAPE REVERSE_SOLIDUS .)


state 49

    (42) char -> ESCAPE LINE_FEED_CHAR .

    QUOTATION_MARK  reduce using rule 42 (char -> ESCAPE LINE_FEED_CHAR .)
    UNESCAPED       reduce using rule 42 (char -> ESCAPE LINE_FEED_CHAR .)
    ESCAPE          reduce using rule 42 (char -> ESCAPE LINE_FEED_CHAR .)


state 50

    (40) char -> ESCAPE BACKSPACE_CHAR .

    QUOTATION_MARK  reduce using rule 40 (char -> ESCAPE BACKSPACE_CHAR .)
    UNESCAPED       reduce using rule 40 (char -> ESCAPE BACKSPACE_CHAR .)
    ESCAPE          reduce using rule 40 (char -> ESCAPE BACKSPACE_CHAR .)


state 51

    (43) char -> ESCAPE CARRIAGE_RETURN_CHAR .

    QUOTATION_MARK  reduce using rule 43 (char -> ESCAPE CARRIAGE_RETURN_CHAR .)
    UNESCAPED       reduce using rule 43 (char -> ESCAPE CARRIAGE_RETURN_CHAR .)
    ESCAPE          reduce using rule 43 (char -> ESCAPE CARRIAGE_RETURN_CHAR .)


state 52

    (45) char -> ESCAPE UNICODE_HEX .

    QUOTATION_MARK  reduce using rule 45 (char -> ESCAPE UNICODE_HEX .)
    UNESCAPED       reduce using rule 45 (char -> ESCAPE UNICODE_HEX .)
    ESCAPE          reduce using rule 45 (char -> ESCAPE UNICODE_HEX .)


state 53

    (41) char -> ESCAPE FORM_FEED_CHAR .

    QUOTATION_MARK  reduce using rule 41 (char -> ESCAPE FORM_FEED_CHAR .)
    UNESCAPED       reduce using rule 41 (char -> ESCAPE FORM_FEED_CHAR .)
    ESCAPE          reduce using rule 41 (char -> ESCAPE FORM_FEED_CHAR .)


state 54

    (37) char -> ESCAPE QUOTATION_MARK .

    QUOTATION_MARK  reduce using rule 37 (char -> ESCAPE QUOTATION_MARK .)
    UNESCAPED       reduce using rule 37 (char -> ESCAPE QUOTATION_MARK .)
    ESCAPE          reduce using rule 37 (char -> ESCAPE QUOTATION_MARK .)


state 55

    (44) char -> ESCAPE TAB_CHAR .

    QUOTATION_MARK  reduce using rule 44 (char -> ESCAPE TAB_CHAR .)
    UNESCAPED       reduce using rule 44 (char -> ESCAPE TAB_CHAR .)
    ESCAPE          reduce using rule 44 (char -> ESCAPE TAB_CHAR .)


state 56

    (29) exp -> E PLUS DIGITS .

    VALUE_SEPARATOR reduce using rule 29 (exp -> E PLUS DIGITS .)
    END_ARRAY       reduce using rule 29 (exp -> E PLUS DIGITS .)
    FALSE           reduce using rule 29 (exp -> E PLUS DIGITS .)
    TRUE            reduce using rule 29 (exp -> E PLUS DIGITS .)
    NULL            reduce using rule 29 (exp -> E PLUS DIGITS .)
    BEGIN_OBJECT    reduce using rule 29 (exp -> E PLUS DIGITS .)
    BEGIN_ARRAY     reduce using rule 29 (exp -> E PLUS DIGITS .)
    MINUS           reduce using rule 29 (exp -> E PLUS DIGITS .)
    QUOTATION_MARK  reduce using rule 29 (exp -> E PLUS DIGITS .)
    ZERO            reduce using rule 29 (exp -> E PLUS DIGITS .)
    DIGITS          reduce using rule 29 (exp -> E PLUS DIGITS .)
    END_OBJECT      reduce using rule 29 (exp -> E PLUS DIGITS .)


state 57

    (27) exp -> E MINUS DIGITS .

    VALUE_SEPARATOR reduce using rule 27 (exp -> E MINUS DIGITS .)
    END_ARRAY       reduce using rule 27 (exp -> E MINUS DIGITS .)
    FALSE           reduce using rule 27 (exp -> E MINUS DIGITS .)
    TRUE            reduce using rule 27 (exp -> E MINUS DIGITS .)
    NULL            reduce using rule 27 (exp -> E MINUS DIGITS .)
    BEGIN_OBJECT    reduce using rule 27 (exp -> E MINUS DIGITS .)
    BEGIN_ARRAY     reduce using rule 27 (exp -> E MINUS DIGITS .)
    MINUS           reduce using rule 27 (exp -> E MINUS DIGITS .)
    QUOTATION_MARK  reduce using rule 27 (exp -> E MINUS DIGITS .)
    ZERO            reduce using rule 27 (exp -> E MINUS DIGITS .)
    DIGITS          reduce using rule 27 (exp -> E MINUS DIGITS .)
    END_OBJECT      reduce using rule 27 (exp -> E MINUS DIGITS .)

