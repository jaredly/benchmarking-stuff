
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9a,}:\xd0\xc4K\x15\xf3W\x14\xa6\x8b\xf6\x8d\n'
    
_lr_action_items = {'SOLIDUS':([39,],[47,]),'BEGIN_OBJECT':([0,2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,31,33,34,35,36,40,42,45,46,56,57,],[1,-15,1,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,1,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'BEGIN_ARRAY':([0,2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,31,33,34,35,36,40,42,45,46,56,57,],[2,-15,2,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,2,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'NAME_SEPARATOR':([11,40,],[29,-33,]),'UNESCAPED':([10,28,37,38,47,48,49,50,51,52,53,54,55,],[-34,37,-36,-35,-39,-38,-42,-40,-43,-45,-41,-37,-44,]),'UNICODE_HEX':([39,],[52,]),'QUOTATION_MARK':([1,2,6,7,8,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,],[-11,-15,10,10,-10,-13,-34,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,-12,40,10,-24,-25,-22,-21,-16,-36,-35,54,-33,-14,-28,-30,-26,-39,-38,-42,-40,-43,-45,-41,-37,-44,-29,-27,]),'NULL':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,31,33,34,35,36,40,42,45,46,56,57,],[-15,16,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,16,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'TRUE':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,31,33,34,35,36,40,42,45,46,56,57,],[-15,17,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,17,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'MINUS':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,30,31,33,34,35,36,40,42,45,46,56,57,],[-15,18,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,18,44,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'DIGITS':([2,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,40,42,43,44,45,46,56,57,],[-15,19,-10,-23,-20,-5,-4,-9,-8,19,-32,-18,-6,-3,-31,-19,-7,-17,19,42,-24,45,-25,-22,-21,-16,-33,-28,56,57,-30,-26,-29,-27,]),'END_ARRAY':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,31,33,34,35,36,40,42,45,46,56,57,],[-15,20,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'TAB_CHAR':([39,],[55,]),'FORM_FEED_CHAR':([39,],[53,]),'PLUS':([30,],[43,]),'DECIMAL_POINT':([12,19,23,],[32,-32,-31,]),'$end':([3,4,5,8,20,],[0,-1,-2,-10,-18,]),'VALUE_SEPARATOR':([8,9,12,13,14,15,16,17,19,20,21,22,23,24,25,26,31,33,34,35,40,41,42,45,46,56,57,],[-10,27,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,36,-24,-25,-22,-21,-33,-14,-28,-30,-26,-29,-27,]),'BACKSPACE_CHAR':([39,],[50,]),'E':([12,19,23,33,45,],[30,-32,-31,30,-30,]),'LINE_FEED_CHAR':([39,],[49,]),'CARRIAGE_RETURN_CHAR':([39,],[51,]),'ZERO':([2,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,31,33,34,35,36,40,42,45,46,56,57,],[-15,23,-10,-23,-20,-5,-4,-9,-8,23,-32,-18,-6,-3,-31,-19,-7,-17,23,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'ESCAPE':([10,28,37,38,47,48,49,50,51,52,53,54,55,],[-34,39,-36,-35,-39,-38,-42,-40,-43,-45,-41,-37,-44,]),'REVERSE_SOLIDUS':([39,],[48,]),'FALSE':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,29,31,33,34,35,36,40,42,45,46,56,57,],[-15,25,-10,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-17,25,-24,-25,-22,-21,-16,-33,-28,-30,-26,-29,-27,]),'END_OBJECT':([1,6,8,9,12,13,14,15,16,17,19,20,21,22,23,24,25,27,31,33,34,35,40,41,42,45,46,56,57,],[-11,8,-10,-13,-23,-20,-5,-4,-9,-8,-32,-18,-6,-3,-31,-19,-7,-12,-24,-25,-22,-21,-33,-14,-28,-30,-26,-29,-27,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'char':([28,],[38,]),'exp':([12,33,],[31,46,]),'float':([7,18,29,],[13,34,13,]),'frac':([12,],[33,]),'string':([6,7,29,],[11,21,21,]),'int':([7,18,29,],[12,12,12,]),'text':([0,],[3,]),'chars':([10,],[28,]),'object':([0,7,29,],[4,22,22,]),'number':([7,29,],[14,14,]),'value':([7,29,],[26,41,]),'member':([6,],[9,]),'values':([2,],[7,]),'members':([1,],[6,]),'integer':([7,18,29,],[24,35,24,]),'array':([0,7,29,],[5,15,15,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> text","S'",1,None,None,None),
  ('text -> object','text',1,'p_text','/home/jared/clone/benchmark/json_/jsonply.py',270),
  ('text -> array','text',1,'p_text','/home/jared/clone/benchmark/json_/jsonply.py',271),
  ('value -> object','value',1,'p_value','/home/jared/clone/benchmark/json_/jsonply.py',275),
  ('value -> array','value',1,'p_value','/home/jared/clone/benchmark/json_/jsonply.py',276),
  ('value -> number','value',1,'p_value','/home/jared/clone/benchmark/json_/jsonply.py',277),
  ('value -> string','value',1,'p_value','/home/jared/clone/benchmark/json_/jsonply.py',278),
  ('value -> FALSE','value',1,'p_value_false','/home/jared/clone/benchmark/json_/jsonply.py',282),
  ('value -> TRUE','value',1,'p_value_true','/home/jared/clone/benchmark/json_/jsonply.py',286),
  ('value -> NULL','value',1,'p_value_null','/home/jared/clone/benchmark/json_/jsonply.py',290),
  ('object -> BEGIN_OBJECT members END_OBJECT','object',3,'p_object','/home/jared/clone/benchmark/json_/jsonply.py',294),
  ('members -> <empty>','members',0,'p_members','/home/jared/clone/benchmark/json_/jsonply.py',298),
  ('members -> members member VALUE_SEPARATOR','members',3,'p_members','/home/jared/clone/benchmark/json_/jsonply.py',299),
  ('members -> members member','members',2,'p_members','/home/jared/clone/benchmark/json_/jsonply.py',300),
  ('member -> string NAME_SEPARATOR value','member',3,'p_member','/home/jared/clone/benchmark/json_/jsonply.py',308),
  ('values -> <empty>','values',0,'p_values','/home/jared/clone/benchmark/json_/jsonply.py',313),
  ('values -> values value VALUE_SEPARATOR','values',3,'p_values','/home/jared/clone/benchmark/json_/jsonply.py',314),
  ('values -> values value','values',2,'p_values','/home/jared/clone/benchmark/json_/jsonply.py',315),
  ('array -> BEGIN_ARRAY values END_ARRAY','array',3,'p_array','/home/jared/clone/benchmark/json_/jsonply.py',323),
  ('number -> integer','number',1,'p_number_positive','/home/jared/clone/benchmark/json_/jsonply.py',327),
  ('number -> float','number',1,'p_number_positive','/home/jared/clone/benchmark/json_/jsonply.py',328),
  ('number -> MINUS integer','number',2,'p_number_negative','/home/jared/clone/benchmark/json_/jsonply.py',332),
  ('number -> MINUS float','number',2,'p_number_negative','/home/jared/clone/benchmark/json_/jsonply.py',333),
  ('integer -> int','integer',1,'p_integer','/home/jared/clone/benchmark/json_/jsonply.py',337),
  ('integer -> int exp','integer',2,'p_integer_exp','/home/jared/clone/benchmark/json_/jsonply.py',341),
  ('float -> int frac','float',2,'p_number_float','/home/jared/clone/benchmark/json_/jsonply.py',345),
  ('float -> int frac exp','float',3,'p_number_float_exp','/home/jared/clone/benchmark/json_/jsonply.py',349),
  ('exp -> E MINUS DIGITS','exp',3,'p_exp_negative','/home/jared/clone/benchmark/json_/jsonply.py',353),
  ('exp -> E DIGITS','exp',2,'p_exp','/home/jared/clone/benchmark/json_/jsonply.py',357),
  ('exp -> E PLUS DIGITS','exp',3,'p_exp_positive','/home/jared/clone/benchmark/json_/jsonply.py',361),
  ('frac -> DECIMAL_POINT DIGITS','frac',2,'p_frac','/home/jared/clone/benchmark/json_/jsonply.py',365),
  ('int -> ZERO','int',1,'p_int_zero','/home/jared/clone/benchmark/json_/jsonply.py',369),
  ('int -> DIGITS','int',1,'p_int_non_zero','/home/jared/clone/benchmark/json_/jsonply.py',373),
  ('string -> QUOTATION_MARK chars QUOTATION_MARK','string',3,'p_string','/home/jared/clone/benchmark/json_/jsonply.py',379),
  ('chars -> <empty>','chars',0,'p_chars','/home/jared/clone/benchmark/json_/jsonply.py',383),
  ('chars -> chars char','chars',2,'p_chars','/home/jared/clone/benchmark/json_/jsonply.py',384),
  ('char -> UNESCAPED','char',1,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',391),
  ('char -> ESCAPE QUOTATION_MARK','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',392),
  ('char -> ESCAPE REVERSE_SOLIDUS','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',393),
  ('char -> ESCAPE SOLIDUS','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',394),
  ('char -> ESCAPE BACKSPACE_CHAR','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',395),
  ('char -> ESCAPE FORM_FEED_CHAR','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',396),
  ('char -> ESCAPE LINE_FEED_CHAR','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',397),
  ('char -> ESCAPE CARRIAGE_RETURN_CHAR','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',398),
  ('char -> ESCAPE TAB_CHAR','char',2,'p_char','/home/jared/clone/benchmark/json_/jsonply.py',399),
  ('char -> ESCAPE UNICODE_HEX','char',2,'p_char_unicode_hex','/home/jared/clone/benchmark/json_/jsonply.py',405),
]
